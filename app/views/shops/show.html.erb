<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyCgc17y7bu5UP0-jeDqY4zwbPh0sySSsMs&libraries=places"></script>
<!-- <script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyAKSmtc7T8T72MMS0G&#45;MEflbNk_p8TmrtQ&#38;libraries=places"></script> -->
<%= javascript_include_tag 'infobox_packed' %>
<%= javascript_include_tag 'markerclusterer.min' %>
<%= javascript_include_tag 'infobubble-compiled.js' %>
<!-- <script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script> -->
<!-- <script src='//cdn.rawgit.com/printercu/google&#45;maps&#45;utility&#45;library&#45;v3&#45;read&#45;only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> -->

<%= stylesheet_link_tag "shops", :media => "all" %>

<%= render 'choices'%>

<div id="condition">
  <p>選択された条件
  <span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span>
  &nbsp;&nbsp;
  </p>
  <div id="labels">
    <% @shops.each do |shop| %>
      <% if @selected_shop_ids && @selected_shop_ids.include?(shop.id) %>
        <div class="bootstrap_btn_wrapper"><button type="button" class="btn btn-sm btn-success"><%= shop.name %> <span class="badge"><%= @hit_branches_count[shop.id.to_s] %>件</span></button></div>
      <% end %>
    <% end %>
    <% @prefectures.each do |prefecture| %>
      <% if @selected_prefecture_ids && @selected_prefecture_ids.include?(prefecture.id) %>
        <div class="bootstrap_btn_wrapper"><button type="button" class="btn btn-sm btn-danger"><%= prefecture.name %></button></div>
      <% end %>
    <% end %>
  </div>
  <div class="clear"></div>
</div>

<% if @error_msg %>
  <div class="error alert alert-danger" role="alert">
    <strong>すみません、エラーが発生しました。<br><a href="/">TOPページ</a>からやり直して下さい。</strong>
  </div>
<% elsif @branch_markers.length == 0 %>
  <div class="error alert alert-danger" role="alert">
    該当する店舗が見つかりませんでした。
  </div>
<% else %>
  <div id="panel" class="branchlocator_panel">
    <div class="location_search">
      <p>場所を指定してジャンプ</p>
      <input id="pac-input" class="controls" type="text" placeholder="Search Box">
    </div>
    <ul class="branch_list">
      <% @branches.each.with_index do |b, i| %>
      <li>
        <div id="<%= i %>" class="branch">
          <div class="title"><%= b.name %></div>
          <div class="address"><%= b.address %></div>
          <span class="lat"><%= b.latitude %></span>
          <span class="lng"><%= b.longitude %></span>
        </div>
      </li>
    <% end %>
    </ul>
  </div>
  <div id="map"></div>
<% end %>

<script>
handler = Gmaps.build('Google');
handler.buildMap({ internal: {id: 'map'}}, function(){
  markers = handler.addMarkers(<%=raw @branch_markers.to_json %>);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
});

var input = document.getElementById('pac-input');
var searchBox = new google.maps.places.SearchBox(input);
var map = handler.getMap();
// map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

// 店舗リスト
var previous_clicked_div;
$(".branch").on("click", function(){
  // 背景色変更
  $(this).css('background', '#cacce2');
  if(previous_clicked_div !== undefined){
    previous_clicked_div.css('background', '#f2f4f6');
  }
  previous_clicked_div = $(this);

  // 地図の中心をその店舗に合わせる
  var lat = parseFloat($(this).children(".lat").text());
  var lng = parseFloat($(this).children(".lng").text());
  var id  = parseInt($(this).attr("id"));
  map.panTo(new google.maps.LatLng(lat, lng));
  google.maps.event.trigger(markers[id].serviceObject, "click");
  map.setZoom(14);
  //var bounds = new google.maps.LatLngBounds(lat, lng);
  // map.fitBounds(bounds);
  // map.setZoom(15);
  
});

// 検索時の処理
var old_marker;
searchBox.addListener('places_changed', function() {
  var places = searchBox.getPlaces();
  if (places.slength == 0) {
    return;
  }
  var place = places[0]
  old_marker = place;

  // Create a marker for each place.
  handler.addMarker({
    map:   map,
    title: place.name,
    lat:   place.geometry.location.lat(),
    lng:   place.geometry.location.lng()
  });

  var bounds = new google.maps.LatLngBounds();
  if (place.geometry.viewport) {
    // Only geocodes have viewport.
    bounds.union(place.geometry.viewport);
    map.fitBounds(bounds);
  } else {
    bounds.extend(place.geometry.location);
    map.fitBounds(bounds);
    map.setZoom(15)
  }
});

// ブラウザ判定してdivサイズを可変に
// var useragent = navigator.userAgent;
// var mapdiv = $("#map");
// if (useragent.indexOf('iPhone') != -1 || useragent.indexOf('Android') != -1 ) {
//   mapdiv.style.width = '100%';
//   mapdiv.style.height = '100%';
// } else {
//   mapdiv.style.width = '600px';
//   mapdiv.style.height = '800px';
// }
</script>

